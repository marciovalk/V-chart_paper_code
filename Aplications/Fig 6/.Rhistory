group_id=c(rep(1,(d_inc-1)),0)
U1[k]=bn(group_id, data=dados)
}
U1drift=U1/sd(U0)
sum(U1drift>qnorm(conf))#
########################################
# Dynamics
# ACF
#####################################
LagMax=200
m_acf=matrix(0,ncol=LagMax,nrow=40)
for(i in 1:(d_inc+10)){
m_acf[i,]=acf(s_ma[i,],plot=FALSE,lag.max = LagMax)$acf[-1]
}
#############################################
reff=c()
reff[1:d_inc]="In-control group"
reff[31:40]="Faulty group"
dt=list()
for(j in 1:(d_inc+10)){
dt[[j]] <- data.table(Lag = seq(1,dim(m_acf)[2]),coefs = m_acf[j,],ref=rep(reff[j],dim(m_acf)[2]))
}
dt <- rbindlist(dt,idcol = 'Run')
p_acf_ma=ggplot(dt, aes(Lag, coefs,group=factor(ref),colour=factor(ref))) +
stat_summary(geom = "line", fun.y = mean) +
geom_smooth(stat = 'summary', fun.data = mean_cl_quantile,alpha = 0.2,size=0.25,aes(fill = factor(ref)))
p_acf_ma=p_acf_ma +theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="ACF of Penicillin C. - Moving Average Centered",fill="",group="",colour="")
grid.arrange(p_ma,p_acf_ma,ncol=2) #1100 x 500
##leave-one-out (calc  U's under H0, dynamic-charts)
U0=c()
sd_bn=sqrt(var_bn(c((d_inc-1),1),data = m_acf[1:d_inc,]))
for(i in 1:d_inc){
group_id=rep(1,d_inc)
group_id[i]=0
U0[i]=bn(group_id, data=m_acf[1:d_inc,])#/sd_bn
}
#hist(U0/sd(U0))
hist(U0/sd_bn)
U0Dy=U0/sd(U0)
sum((U0/sd(U0))>qnorm(conf))
#U1
U1=c()
k=0
for(i in (d_inc+1):(d_inc+10)){
k=k+1
dados <- rbind(s_ma[1:(d_inc-1),],s_sd[i,])
group_id=c(rep(1,(d_inc-1)),0)
U1[k]=bn(group_id, data=dados)
}
U1Dy=U1/sd(U0)
sum(U1Dy>qnorm(conf)) #
#############################################################
# Plot chart drift
library(latex2exp)
quantil_alpha=qnorm(conf)
T2_g=c(U0drift,U1drift)
vc=(T2_g>quantil_alpha)*1
IC=d_inc
IC.new=10
df=data.frame(i=1:(IC+IC.new),T2_g=T2_g, vc=vc)
go<-ggplot(df, aes(x=i,y=T2_g))+geom_point()
#go<-go+ggtitle("T2_Beta scores of Dynamic ARMA coefficients")
#go<-go+geom_hline(yintercept = 0)
go<-go+geom_vline(xintercept = IC,linetype="dashed",size=0.6)
go<-go+xlab("batches")+ylab(TeX("$V_d$ - scores "))+
ggtitle("Drift monitoring")+
theme(plot.title=element_text(margin=margin(t=40,b=-30),hjust = 0.5))
go<-go+geom_hline(yintercept = quantil_alpha)
go<-go+geom_point(aes(color=as.factor(vc)),y=df[,2],x=df[,1])+ylim(c(0,max(max(df$T2_g),quantil_alpha)+5))
go<-go+guides(color = FALSE)
go<-go+scale_color_manual(values=c("blue","red"))
g=go
pchart_drift=g
#############################################################
# Plot chart drift
CubeRoot<-function(x){
sign(x)*abs(x)^(1/3)
}
quantil_alpha<-CubeRoot(quantil_alpha)
T2_g=c(CubeRoot(U0Dy),CubeRoot(U1Dy))
vc=(T2_g>quantil_alpha)*1
df=data.frame(i=1:(IC+IC.new),T2_g=T2_g, vc=vc)
go<-ggplot(df, aes(x=i,y=T2_g))+geom_point()
#go<-go+ggtitle("T2_Beta scores of Dynamic ARMA coefficients")
#go<-go+geom_hline(yintercept = 0)
go<-go+geom_vline(xintercept = IC,linetype="dashed",size=0.6)
go<-go+xlab("batches")+ylab(TeX(" $V_s$ - scores "))+
ggtitle("Dynamic monitoring")+
theme(plot.title=element_text(margin=margin(t=40,b=-30),hjust = 0.5))
go<-go+geom_hline(yintercept = quantil_alpha)
go<-go+geom_point(aes(color=as.factor(vc)),y=df[,2],x=df[,1])+ylim(c(0,max(max(df$T2_g),quantil_alpha)+5))
go<-go+guides(color = FALSE)
go<-go+scale_color_manual(values=c("blue","red"))
g=go
pchart_dy=g
grid.arrange(pchart_drift,pchart_dy,ncol=2) #1100 x 500
setwd("C:/Users/Marcio/Dropbox/Renan Mestrado/Code/Aplications/Figs 3-4-5")
ma <- function(arr, n=15){
res = arr
for(i in (floor(n/2)+1):(length(arr)-floor(n/2))){
res[i] = mean(arr[(i-floor(n/2)):(i+floor(n/2))])
}
res
}
mean_cl_quantile <- function(x, q = c(0.1, 0.9), na.rm = TRUE){
dat <- data.frame(y = mean(x, na.rm = na.rm),
ymin = quantile(x, probs = q[1], na.rm = na.rm),
ymax = quantile(x, probs = q[2], na.rm = na.rm))
return(dat)
}
library(latex2exp)
library(data.table)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(tseries)
library(uclust)
###################################################################
## Data downloaded from
#https://data.mendeley.com/datasets/pdnjz7zz5x/1   (before 05/2022)
#file1="100_Batches_IndPenSim_V3.csv"
#peni2 <- read.csv(file1,stringsAsFactors=FALSE, header=T, nrows=5)
#colnames(peni2)[25]
#dim(peni2)
#btc_ref <- fread(file1, select = c(36)) #1 to 100
#btc_ref_control<-fread(file1, select = c(37))# 0 and 1's
#timeh<-fread(file1, select = 1)
#time<-timeh*10/2
###Batches 1-30: Controlled by recipe driven approach
###Batches 31-60: Controlled by operators
###Batches 61:90: Controlled by an Advanced Process Control (APC)  solution using the Raman spectroscopy
###Batches 91:100: Contain faults resulting in process deviations.
#col_btc=25 # col 25 eh a var "Oxygen.Uptake.Rate.OUR..g.min...1..."
#df<-data.frame(c(fread(file1, select = col_btc),btc_ref,btc_ref_control,time))
#df[,5]<-c(0,diff(df[,1]))
#colnames(df)=c("var","ref","group","time","diff_var")
#save(df,file="data_oxigen")
load("data_oxigen")
dfs<-df
d_ref=61:90
df<-filter(dfs, ref %in% c(d_ref,91:100))
d_inc<-length(d_ref)
###############################################################
df$ref2[which(df$group==1)]<-"Faulty group"
df$ref2[which(df$group==0)]<-"In-control group"
p_ox<-ggplot(df,
aes(x=time, y=var, group=ref,
color=factor(ref2))) +
geom_point(aes(shape=factor(group)), size=0.001) +
geom_line()+
theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="Oxygen U.R.",colour="")
p_ox<-p_ox + guides(fill = FALSE, linetype = FALSE, shape = FALSE)
#p_ox
#################################################
t_max=835
serie_media=c()
for(t in 1:t_max){
serie_media[t]=mean(df$var[which(df$time==t)][1:d_inc])
}
#plot.ts(serie_media)
df2<-df[which(df$time<=t_max),]
df2$serie_media<-c(rep(serie_media,(d_inc+10)))
df2$diff_var<-df2$var-df2$serie_media # diferenciada da media
df2<-df2[which(df2$time>2),];t_max=t_max-2
df2$ref2<-df2$ref
df2$ref2[which(df2$group==1)]<-"Faulty group"
df2$ref2[which(df2$group==0)]<-"In-control group"
p_oxc<-ggplot(df2,
aes(x=time, y=diff_var, group=ref,
color=factor(ref2))) +
geom_point(aes(shape=factor(group)), size=0.001) +
geom_line()+
theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="Oxygen U.R. - Mean Centered",colour="")
p_oxc<-p_oxc + guides(fill = FALSE, linetype = FALSE, shape = FALSE)
#p_oxc #centered
grid.arrange(p_ox,p_oxc,ncol=2) #1100 x 500
#################################################
s_ma=matrix(0,nrow =(d_inc+10),ncol=t_max )
s_sd=s_ma
k=0
mean_average=NULL
for(i in c(d_ref,91:100) ){
k=k+1
st=df$var[which(df$ref==i)][1:t_max]
s_ma[k,]=st-ma(st)
s_sd[k,]=df2$diff_var[which(df2$ref==i)][1:t_max]
mean_average=c(mean_average,s_ma[k,])
}
df2$mean_average=mean_average
p_ma<-ggplot(df2,
aes(x=time, y=mean_average, group=ref,
color=factor(ref2))) +
geom_point(aes(shape=factor(group)), size=0.001) +
geom_line()+ylim(-1,1) +
theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="Oxygen U.R. - Moving Average Centered",colour="")
p_ma<-p_ma + guides(fill = FALSE, linetype = FALSE, shape = FALSE)
#p_ma #mean average centered
##leave-one-out (calculo das U's sob H0, Drift-charts)
md <- as.matrix(dist(s_sd)^2)
U0=c()
conf=0.95
sd_bn=sqrt(var_bn(c((d_inc-1),1),md = md[1:d_inc,1:d_inc]))
for(i in 1:d_inc){
group_id=rep(1,d_inc)
group_id[i]=0
U0[i]=bn(group_id, md=md[1:d_inc,1:d_inc])
}
hist(U0/sd_bn)
U0drift=U0/sd_bn
sum(U0/sd(U0)>qnorm(conf))
sd(U0)
#U1 drfit
U1=c()
k=0
for(i in (d_inc+1):(d_inc+10)){
k=k+1
dados <- rbind(s_sd[1:(d_inc-1),],s_sd[i,])
group_id=c(rep(1,(d_inc-1)),0)
U1[k]=bn(group_id, data=dados)
}
U1drift=U1/sd(U0)
sum(U1>qnorm(conf))#
########################################
# Dynamics
# ACF
#####################################
LagMax=200
m_acf=matrix(0,ncol=LagMax,nrow=40)
for(i in 1:(d_inc+10)){
m_acf[i,]=acf(s_ma[i,],plot=FALSE,lag.max = LagMax)$acf[-1]
}
#############################################
reff=c()
reff[1:d_inc]="In-control group"
reff[31:40]="Faulty group"
dt=list()
for(j in 1:(d_inc+10)){
dt[[j]] <- data.table(Lag = seq(1,dim(m_acf)[2]),coefs = m_acf[j,],ref=rep(reff[j],dim(m_acf)[2]))
}
dt <- rbindlist(dt,idcol = 'Run')
p_acf_ma=ggplot(dt, aes(Lag, coefs,group=factor(ref),colour=factor(ref))) +
stat_summary(geom = "line", fun.y = mean) +
geom_smooth(stat = 'summary', fun.data = mean_cl_quantile,alpha = 0.2,size=0.25,aes(fill = factor(ref)))
p_acf_ma=p_acf_ma +theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="ACF of Penicillin C. - Moving Average Centered",fill="",group="",colour="")
grid.arrange(p_ma,p_acf_ma,ncol=2) #1100 x 500
##leave-one-out (calc of U's under H0, dynamic-charts)
U0=c()
sd_bn=sqrt(var_bn(c((d_inc-1),1),data = m_acf[1:d_inc,]))
for(i in 1:d_inc){
group_id=rep(1,d_inc)
group_id[i]=0
U0[i]=bn(group_id, data=m_acf[1:d_inc,])#/sd_bn
}
#hist(U0/sd(U0))
hist(U0/sd_bn)
U0Dy=U0/sd(U0)
sum((U0/sd(U0))>qnorm(conf))
#U1
U1=c()
k=0
for(i in (d_inc+1):(d_inc+10)){
k=k+1
dados <- rbind(s_ma[1:(d_inc-1),],s_sd[i,])
group_id=c(rep(1,(d_inc-1)),0)
U1[k]=bn(group_id, data=dados)
}
U1Dy=U1/sd(U0)
sum(U1Dy>qnorm(conf)) #
#############################################################
# Plot chart drift
library(latex2exp)
quantil_alpha=qnorm(conf)
T2_g=c(U0drift,U1drift)
vc=(T2_g>quantil_alpha)*1
IC=d_inc
IC.new=10
df=data.frame(i=1:(IC+IC.new),T2_g=T2_g, vc=vc)
go<-ggplot(df, aes(x=i,y=T2_g))+geom_point()
#go<-go+ggtitle("T2_Beta scores of Dynamic ARMA coefficients")
#go<-go+geom_hline(yintercept = 0)
go<-go+geom_vline(xintercept = IC,linetype="dashed",size=0.6)
go<-go+xlab("batches")+ylab(TeX("$V_d$ - scores "))+
ggtitle("Drift monitoring")+
theme(plot.title=element_text(margin=margin(t=40,b=-30),hjust = 0.5))
go<-go+geom_hline(yintercept = quantil_alpha)
go<-go+geom_point(aes(color=as.factor(vc)),y=df[,2],x=df[,1])+ylim(c(0,max(max(df$T2_g),quantil_alpha)+5))
go<-go+guides(color = FALSE)
go<-go+scale_color_manual(values=c("blue","red"))
g=go
pchart_drift=g
#############################################################
# Plot chart drift
CubeRoot<-function(x){
sign(x)*abs(x)^(1/3)
}
quantil_alpha<-CubeRoot(quantil_alpha)
T2_g=c(CubeRoot(U0Dy),CubeRoot(U1Dy))
vc=(T2_g>quantil_alpha)*1
df=data.frame(i=1:(IC+IC.new),T2_g=T2_g, vc=vc)
go<-ggplot(df, aes(x=i,y=T2_g))+geom_point()
#go<-go+ggtitle("T2_Beta scores of Dynamic ARMA coefficients")
#go<-go+geom_hline(yintercept = 0)
go<-go+geom_vline(xintercept = IC,linetype="dashed",size=0.6)
go<-go+xlab("batches")+ylab(TeX(" $V_s$ - scores "))+
ggtitle("Dynamic monitoring")+
theme(plot.title=element_text(margin=margin(t=40,b=-30),hjust = 0.5))
go<-go+geom_hline(yintercept = quantil_alpha)
go<-go+geom_point(aes(color=as.factor(vc)),y=df[,2],x=df[,1])+ylim(c(0,max(max(df$T2_g),quantil_alpha)+5))
go<-go+guides(color = FALSE)
go<-go+scale_color_manual(values=c("blue","red"))
g=go
pchart_dy=g
grid.arrange(pchart_drift,pchart_dy,ncol=2) #1100 x 500
setwd("C:/Users/Marcio/Dropbox/Renan Mestrado/Code/Aplications/Fig 6")
## Data downloaded from
#https://data.mendeley.com/datasets/pdnjz7zz5x/1   (before 05/2022)
library(latex2exp)
library(data.table)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(tseries)
library(FitAR)
#function to plot
mean_cl_quantile <- function(x, q = c(0.1, 0.9), na.rm = TRUE){
dat <- data.frame(y = mean(x, na.rm = na.rm),
ymin = quantile(x, probs = q[1], na.rm = na.rm),
ymax = quantile(x, probs = q[2], na.rm = na.rm))
return(dat)
}
#file1="100_Batches_IndPenSim_V3.csv"
#
# peni2 <- read.csv(file1,stringsAsFactors=FALSE, header=T, nrows=5)
#
# colnames(peni2)[38]
# dim(peni2)
#
# btc_ref <- fread(file1, select = c(36)) #1 ateh 100
# btc_ref_control<-fread(file1, select = c(37))# 0 e 1's
# timeh<-fread(file1, select = 1)
# #id_bc<-which((timeh$`Time (h)`)==0.2) #bateu com o tempo timeh
# #diff(id_bc) nem todos tem mesmo tamanho
# time<-timeh*10/2
#
# #Batches 1-30: Controlled by recipe driven approach
# #Batches 31-60: Controlled by operators
# #Batches 61:90: Controlled by an Advanced Process Control (APC)  solution using the Raman spectroscopy
# #Batches 91:100: Contain faults resulting in process deviations.
#
# #col  18 (de 1:30) pegou 3 (de 61:90 pegou 3, (3,4,6))
# #col  25 (de 1:30 e 31:60) pegou 2 (de 61:90 pegou 5 (1,4,5,9,10))
#
# library(dplyr)
# col_btc=25
#
# df<-data.frame(c(fread(file1, select = col_btc),btc_ref,btc_ref_control,time))
# df[,5]<-c(0,diff(df[,1]))
# colnames(df)=c("var","ref","group","time","diff_var")
#save(df,file="data_oxigen")
load("data_oxigen")
dfs<-df
d_ref=61:90
df<-filter(dfs, ref %in% c(d_ref,91:100))
#table(df$ref)
d_inc<-length(d_ref)
p1<-ggplot(df,
aes(x=time, y=var, group=ref,
color=factor(group))) +
geom_point(aes(shape=factor(group)), size=0.1) +
geom_line()
p1
t_max=835
serie_media=c()
for(t in 1:t_max){
serie_media[t]=mean(df$var[which(df$time==t)][1:d_inc])
}
plot.ts(serie_media)
df2<-df[which(df$time<=t_max),]
df2$serie_media<-c(rep(serie_media,(d_inc+10)))
df2$diff_var<-df2$var-df2$serie_media # diferenciada da media
#df2<-df2[which(df2$time>2),]
df2<-df2[which(df2$time>2),]
df2$ref2<-df2$ref
df2$ref2[which(df2$group==1)]<-"Monitoring group"
df2$ref2[which(df2$group==0)]<-"Reference group"
p2<-ggplot(df2,
aes(x=time, y=diff_var, group=ref,
color=factor(ref2))) +
geom_point(aes(shape=factor(group)), size=0.001) +
geom_line()+
theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="Oxygen Uptake Rate",colour="")
p2<-p2 + guides(fill = FALSE, linetype = FALSE, shape = FALSE)
p2
#### fitting
adt=c()
k=0
for( s in d_ref){
k=k+1
s1=df2$diff_var[which(df2$ref==s)]
adt[k]=adf.test(s1)$p.value
}
sum(adt<0.1)# % of time series that don´t have unit root (adf test)
which(adt>0.1)
#########################################
d1=d_inc
id1=d_ref
id0=91:100 #### cuidado
library(FitAR)
po=1:2
coefs_ar=matrix(0,ncol=(length(po)+1),nrow=(d_inc+10))
f1=list()
#df2$diff_var[which(df2$ref==67)]<-df2$diff_var[which(df2$ref==66)]
k=0
for(s in c(d_ref,91:100)){
k=k+1
s1=df2$diff_var[which(df2$ref==s)]
f1[[k]]=arima(s1,order=c(max(po),0,0),include.mean = TRUE)
coefs_ar[k,]=f1[[k]]$coef
print(k)
}
############## ACF Residuals
dt=list()
boxtest=c()
shaptest=c()
for(j in 1:d1){
Acf=acf(f1[[j]]$res,plot=FALSE,lag.max = 60)$acf[-1]
y=Acf;x=1:60
boxtest[j]=Box.test(f1[[j]]$res)$p.value
shaptest[j]=shapiro.test(f1[[j]]$res)$p.value
}
sum(shaptest >= 0.05)/d1
sum(boxtest>=0.05)/d1
###################
## individual t-test
t_tets_ind=matrix(0,ncol=(length(po)+1),nrow=d1)
for(j in 1:d1){
t_tets_ind[j,]=f1[[j]]$coef/sqrt(diag(f1[[j]]$var.coef))
}
ap=apply(t_tets_ind[1:d1,],2,function(x){abs(x)>=qnorm(0.975)*1})
colMeans(ap) #  # criteria : + more than 70% of times were significant in the individual tests
############## plot all coefs  AR(po)
reff=c()
reff[1:d1]="Reference group"
reff[31:40]="Monitoring group"
dt=list()
coefs_ar2=coefs_ar[,c(3,1,2)]
#coefs_ar2[,dim(coefs_ar)[2]]=coefs_ar[,dim(coefs_ar)[2]]
for(j in 1:(d_inc+10)){
dt[[j]] <- data.table(Order = seq(1,length(po)+1),coefs = coefs_ar2[j,],ref=rep(reff[j],length(po)+1))
}
dt <- rbindlist(dt,idcol = 'Run')
p1=ggplot(dt, aes(Order, coefs,group=factor(ref),colour=factor(ref))) +
stat_summary(geom = "line", fun.y = mean) +
geom_smooth(stat = 'summary', fun.data = mean_cl_quantile,alpha = 0.2,size=0.25,aes(fill = factor(ref)))
p1=p1 +theme(legend.text = element_text(size=12),legend.position = "bottom")+ labs( y="AR coefficients",fill="",group="",colour="")
Par=p1+scale_x_continuous(n.breaks = 3,labels=c("0","1","2"))#tamanho 1100x 500
Par
grid.arrange(p2, Par, nrow = 1, ncol = 2)#tamanho 15 x 8
## T2 hotteling
coef_use<-c(1,2,3)
mean_coefs=apply(coefs_ar[1:d1,coef_use],2,mean)
cov_coefs=cov(coefs_ar[1:d1,coef_use])
T2=c()
for(i in 1:30){
T2[i] = mahalanobis(
coefs_ar[i,coef_use],
center = mean_coefs,
cov =cov_coefs,
inverted = FALSE)
}
T2.new=c()
for(i in 1:10){
T2.new[i] = mahalanobis(
coefs_ar[i+d_inc,coef_use],
center = mean_coefs,
cov =cov_coefs,
inverted = FALSE)
}
summary(T2.new)
IC=30
p=length(coef_use)
T2_Lim_Teo= ((IC+1)/IC)*(p*(IC-1)/(IC-p))*qf(0.99,p,(IC-p))
sum(T2.new>T2_Lim_Teo)
##############
# individuais
mth=matrix(0,nrow=10,ncol=length(coef_use))
for(i in 1:10){
mth[i,] = (coefs_ar[i+30,coef_use]-mean_coefs)/sqrt(diag(cov_coefs))
}
t_lim<-sqrt(31/30)*(qt(0.99,29))
colMeans( ((mth>t_lim)|(mth<= -t_lim))*1)
##############################Charts
#######################T2_beta
T2_g=c(T2,T2.new)
vc=(T2_g>T2_Lim_Teo)*1
IC.new=10
library(latex2exp)
df=data.frame(i=1:(IC+IC.new),T2_g=T2_g, vc=vc)
go<-ggplot(df, aes(x=i,y=T2_g))+geom_point()
#go<-go+ggtitle("T2_Beta scores of Dynamic ARMA coefficients")
#go<-go+geom_hline(yintercept = 0)
go<-go+geom_vline(xintercept = IC,linetype="dashed",size=0.6)
go<-go+xlab("batches")+ylab(TeX("$T^2_{\\beta}$ scores"))
go<-go+geom_hline(yintercept = T2_Lim_Teo)
go<-go+geom_point(aes(color=as.factor(vc)),y=df[,2],x=df[,1])+ylim(c(0,max(max(df$T2_g),T2_Lim_Teo)+5))
go<-go+guides(color = FALSE)
go<-go+scale_color_manual(values=c("blue","red"))
g=go
g
# export pdf landscape 4 x 9
