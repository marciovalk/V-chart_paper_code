prop_rejct_1[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.99))
prop_rejct_5[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.95))
prop_rejct_d1[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.99))
prop_rejct_d5[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.95))
}
}
Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_1)/Re)==0,NA,1/(colMeans(prop_rejct_1)/Re))
Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_5)/Re)==0,NA,1/(colMeans(prop_rejct_5)/Re))
#Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(apply(prop_rejct_1,2,median)/Re))
#Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(apply(prop_rejct_5,2,median)/Re))
Res_sd_A_1[n1_count,n_count,] <- apply(prop_rejct_1,2,sd)/Re
Res_sd_A_5[n1_count,n_count,] <- apply(prop_rejct_5,2,sd)/Re
Res_A_d1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(colMeans(prop_rejct_d1)/Re))
Res_A_d5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(colMeans(prop_rejct_d5)/Re))
Res_sd_A_d1[n1_count,n_count,] <- apply(prop_rejct_d1,2,sd)/Re
Res_sd_A_d5[n1_count,n_count,] <- apply(prop_rejct_d5,2,sd)/Re
}
}
tempo1<- Sys.time()-at1
nv=c(500,2000)#tamanho da serie
n1v=c(30)# quantidade de series no H0
#LagMax=199 #quantidade de acfs usada
Re=300 #series a serem monitoreadas n_new
REP=50 #replicações do H0 também (total de reps será Re*REP)
ar_h0=0.3
#ar_coefs=c(-0.4,-0.3,-0.1,0.2,0.3,0.4,0.5,0.7)
ar_coefs=c(0.3)
Res_A_1 <- array(dim=c(length(n1v),length(nv),length(ar_coefs)))
Res_A_5 <- Res_A_1;
Res_sd_A_1 <- Res_A_1; Res_sd_A_5 <- Res_A_1;
Res_A_d1 <- Res_A_1; Res_A_d5 <- Res_A_1;
Res_sd_A_d1 <- Res_A_1; Res_sd_A_d5 <- Res_A_1;
at1<-Sys.time()
n1_count=0
for(n1 in n1v){
n1_count<-n1_count+1
n_count<-0
print(paste("n1_",n1))
for(n in nv){
LagMax=floor(1*n/3)
print(paste("n_",n))
n_count<-n_count+1
prop_rejct_1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_5=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d5=matrix(0,nrow=REP,ncol=length(ar_coefs))
for(rep in 1:REP){
print(paste("REP_",rep))
for(s in 1:length(ar_coefs)){
x=matrix(0,ncol=n,nrow=n1)
y=x
xx=matrix(0,ncol=n,nrow=Re);yy=xx
acf_0=matrix(0,nrow=n1,ncol=LagMax-1)
acf_1=matrix(0,nrow=Re,ncol=LagMax-1)
for(r in 1:n1){
x[r,]<-arima.sim(n=n, model = list(ar = ar_h0))
y[r,]<-x[r,]-ma(x[r,])
x[r,]<-x[r,]/sd(x[r,])
acf_0[r,]=robacf((y[r,1:(n-15)]),lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h0<-sweep(x, 2, colMeans(x))#retira a serie media dos dados
for(r in 1:Re){
xx[r,]<-arima.sim(n=n, model = list(ar = ar_coefs[s]))
yy[r,]<-xx[r,]-ma(xx[r,])
xx[r,]<-xx[r,]/sd(xx[r,])
acf_1[r,]=robacf(yy[r,],lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h1<-sweep(xx, 2, colMeans(x))#retira a serie media(h0) dos dados (h1)
d_a<-as.matrix(((dist(rbind(acf_0,acf_1)))^2))
d_d<-as.matrix(dist(rbind(x_h0,x_h1))^2)
###########################
U0=c()
U0d=c()
for(i in 1:n1){
group_id=rep(0,n1)
group_id[i]=1
U0[i]=bn(group_id, md=d_a[1:n1,1:n1])
U0d[i]=bn(group_id, md=d_d[1:n1,1:n1])
}
sdU0=sqrt(var_bn(c(1,(n1-1)),md=d_a[1:n1,1:n1]))
sdU0d=sqrt(var_bn(c(1,(n1-1)),md=d_d[1:n1,1:n1]))
U1=c()
U1d=c()
for(i in 1:Re){
group_id=c(rep(0,(n1-1)),1)
aux1=sample(n1,(n1-1))
U1[i]=bn(group_id, md=d_a[c(aux1,(i+n1)),c(aux1,(i+n1))])
U1d[i]=bn(group_id, md=d_d[c(1:(n1-1),(i+n1)),c(1:(n1-1),(i+n1))])
}
####
###
prop_rejct_1[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.99))
prop_rejct_5[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.95))
prop_rejct_d1[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.99))
prop_rejct_d5[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.95))
}
}
Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_1)/Re)==0,NA,1/(colMeans(prop_rejct_1)/Re))
Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_5)/Re)==0,NA,1/(colMeans(prop_rejct_5)/Re))
#Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(apply(prop_rejct_1,2,median)/Re))
#Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(apply(prop_rejct_5,2,median)/Re))
Res_sd_A_1[n1_count,n_count,] <- apply(prop_rejct_1,2,sd)/Re
Res_sd_A_5[n1_count,n_count,] <- apply(prop_rejct_5,2,sd)/Re
Res_A_d1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(colMeans(prop_rejct_d1)/Re))
Res_A_d5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(colMeans(prop_rejct_d5)/Re))
Res_sd_A_d1[n1_count,n_count,] <- apply(prop_rejct_d1,2,sd)/Re
Res_sd_A_d5[n1_count,n_count,] <- apply(prop_rejct_d5,2,sd)/Re
}
}
tempo1<- Sys.time()-at1
m_res_1<- matrix(0,ncol=7,nrow=length(n1v)*length(nv)*length(ar_coefs))
m_res_5<-m_res_1
icount=0
ic=0
for(i in n1v){
ic=ic+1
jc=0
for(j in nv){
jc=jc+1
kc=0
for(k in ar_coefs){
kc=kc+1
print(kc)
icount=icount+1
m_res_1[icount,] <- c(i,j,k,Res_A_1[ic,jc,kc],Res_sd_A_1[ic,jc,kc],Res_A_d1[ic,jc,kc],Res_sd_A_d1[ic,jc,kc])
m_res_5[icount,] <- c(i,j,k,Res_A_5[ic,jc,kc],Res_sd_A_5[ic,jc,kc],Res_A_d5[ic,jc,kc],Res_sd_A_d5[ic,jc,kc])
}
}
}
#colnames(m_res_1)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
#round(m_res_1,3)
colnames(m_res_5)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
round(m_res_5,3)
colnames(m_res_1)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
round(m_res_1,3)
nv=c(500,2000)#tamanho da serie
n1v=c(30)# quantidade de series no H0
#LagMax=199 #quantidade de acfs usada
Re=300 #series a serem monitoreadas n_new
REP=50 #replicações do H0 também (total de reps será Re*REP)
ar_h0=0.3
#ar_coefs=c(-0.4,-0.3,-0.1,0.2,0.3,0.4,0.5,0.7)
ar_coefs=c(0.3)
Res_A_1 <- array(dim=c(length(n1v),length(nv),length(ar_coefs)))
Res_A_5 <- Res_A_1;
Res_sd_A_1 <- Res_A_1; Res_sd_A_5 <- Res_A_1;
Res_A_d1 <- Res_A_1; Res_A_d5 <- Res_A_1;
Res_sd_A_d1 <- Res_A_1; Res_sd_A_d5 <- Res_A_1;
at1<-Sys.time()
n1_count=0
for(n1 in n1v){
n1_count<-n1_count+1
n_count<-0
print(paste("n1_",n1))
for(n in nv){
LagMax=floor(1*n/3)
print(paste("n_",n))
n_count<-n_count+1
prop_rejct_1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_5=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d5=matrix(0,nrow=REP,ncol=length(ar_coefs))
for(rep in 1:REP){
print(paste("REP_",rep))
for(s in 1:length(ar_coefs)){
x=matrix(0,ncol=n,nrow=n1)
y=x
xx=matrix(0,ncol=n,nrow=Re);yy=xx
acf_0=matrix(0,nrow=n1,ncol=LagMax-1)
acf_1=matrix(0,nrow=Re,ncol=LagMax-1)
for(r in 1:n1){
x[r,]<-arima.sim(n=n, model = list(ar = ar_h0))
y[r,]<-x[r,]-ma(x[r,])
x[r,]<-x[r,]/sd(x[r,])
acf_0[r,]=acf((y[r,30:(n-30)]),lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h0<-sweep(x, 2, colMeans(x))#retira a serie media dos dados
for(r in 1:Re){
xx[r,]<-arima.sim(n=n, model = list(ar = ar_coefs[s]))
yy[r,]<-xx[r,]-ma(xx[r,])
xx[r,]<-xx[r,]/sd(xx[r,])
acf_1[r,]=acf(yy[r,30:(n-30)],lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h1<-sweep(xx, 2, colMeans(x))#retira a serie media(h0) dos dados (h1)
d_a<-as.matrix(((dist(rbind(acf_0,acf_1)))^2))
d_d<-as.matrix(dist(rbind(x_h0,x_h1))^2)
###########################
U0=c()
U0d=c()
for(i in 1:n1){
group_id=rep(0,n1)
group_id[i]=1
U0[i]=bn(group_id, md=d_a[1:n1,1:n1])
U0d[i]=bn(group_id, md=d_d[1:n1,1:n1])
}
sdU0=sqrt(var_bn(c(1,(n1-1)),md=d_a[1:n1,1:n1]))
sdU0d=sqrt(var_bn(c(1,(n1-1)),md=d_d[1:n1,1:n1]))
U1=c()
U1d=c()
for(i in 1:Re){
group_id=c(rep(0,(n1-1)),1)
aux1=sample(n1,(n1-1))
U1[i]=bn(group_id, md=d_a[c(aux1,(i+n1)),c(aux1,(i+n1))])
U1d[i]=bn(group_id, md=d_d[c(1:(n1-1),(i+n1)),c(1:(n1-1),(i+n1))])
}
####
###
prop_rejct_1[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.99))
prop_rejct_5[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.95))
prop_rejct_d1[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.99))
prop_rejct_d5[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.95))
}
}
Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_1)/Re)==0,NA,1/(colMeans(prop_rejct_1)/Re))
Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_5)/Re)==0,NA,1/(colMeans(prop_rejct_5)/Re))
#Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(apply(prop_rejct_1,2,median)/Re))
#Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(apply(prop_rejct_5,2,median)/Re))
Res_sd_A_1[n1_count,n_count,] <- apply(prop_rejct_1,2,sd)/Re
Res_sd_A_5[n1_count,n_count,] <- apply(prop_rejct_5,2,sd)/Re
Res_A_d1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(colMeans(prop_rejct_d1)/Re))
Res_A_d5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(colMeans(prop_rejct_d5)/Re))
Res_sd_A_d1[n1_count,n_count,] <- apply(prop_rejct_d1,2,sd)/Re
Res_sd_A_d5[n1_count,n_count,] <- apply(prop_rejct_d5,2,sd)/Re
}
}
tempo1<- Sys.time()-at1
nv=c(500,2000)#tamanho da serie
n1v=c(30)# quantidade de series no H0
#LagMax=199 #quantidade de acfs usada
Re=300 #series a serem monitoreadas n_new
REP=50 #replicações do H0 também (total de reps será Re*REP)
ar_h0=0.3
#ar_coefs=c(-0.4,-0.3,-0.1,0.2,0.3,0.4,0.5,0.7)
ar_coefs=c(0.3)
Res_A_1 <- array(dim=c(length(n1v),length(nv),length(ar_coefs)))
Res_A_5 <- Res_A_1;
Res_sd_A_1 <- Res_A_1; Res_sd_A_5 <- Res_A_1;
Res_A_d1 <- Res_A_1; Res_A_d5 <- Res_A_1;
Res_sd_A_d1 <- Res_A_1; Res_sd_A_d5 <- Res_A_1;
at1<-Sys.time()
n1_count=0
for(n1 in n1v){
n1_count<-n1_count+1
n_count<-0
print(paste("n1_",n1))
for(n in nv){
LagMax=floor(1*n/3)
print(paste("n_",n))
n_count<-n_count+1
prop_rejct_1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_5=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d5=matrix(0,nrow=REP,ncol=length(ar_coefs))
for(rep in 1:REP){
print(paste("REP_",rep))
for(s in 1:length(ar_coefs)){
x=matrix(0,ncol=n,nrow=n1)
y=x
xx=matrix(0,ncol=n,nrow=Re);yy=xx
acf_0=matrix(0,nrow=n1,ncol=LagMax)
acf_1=matrix(0,nrow=Re,ncol=LagMax)
for(r in 1:n1){
x[r,]<-arima.sim(n=n, model = list(ar = ar_h0))
y[r,]<-x[r,]-ma(x[r,])
x[r,]<-x[r,]/sd(x[r,])
acf_0[r,]=acf((y[r,30:(n-30)]),lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h0<-sweep(x, 2, colMeans(x))#retira a serie media dos dados
for(r in 1:Re){
xx[r,]<-arima.sim(n=n, model = list(ar = ar_coefs[s]))
yy[r,]<-xx[r,]-ma(xx[r,])
xx[r,]<-xx[r,]/sd(xx[r,])
acf_1[r,]=acf(yy[r,30:(n-30)],lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h1<-sweep(xx, 2, colMeans(x))#retira a serie media(h0) dos dados (h1)
d_a<-as.matrix(((dist(rbind(acf_0,acf_1)))^2))
d_d<-as.matrix(dist(rbind(x_h0,x_h1))^2)
###########################
U0=c()
U0d=c()
for(i in 1:n1){
group_id=rep(0,n1)
group_id[i]=1
U0[i]=bn(group_id, md=d_a[1:n1,1:n1])
U0d[i]=bn(group_id, md=d_d[1:n1,1:n1])
}
sdU0=sqrt(var_bn(c(1,(n1-1)),md=d_a[1:n1,1:n1]))
sdU0d=sqrt(var_bn(c(1,(n1-1)),md=d_d[1:n1,1:n1]))
U1=c()
U1d=c()
for(i in 1:Re){
group_id=c(rep(0,(n1-1)),1)
aux1=sample(n1,(n1-1))
U1[i]=bn(group_id, md=d_a[c(aux1,(i+n1)),c(aux1,(i+n1))])
U1d[i]=bn(group_id, md=d_d[c(1:(n1-1),(i+n1)),c(1:(n1-1),(i+n1))])
}
####
###
prop_rejct_1[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.99))
prop_rejct_5[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.95))
prop_rejct_d1[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.99))
prop_rejct_d5[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.95))
}
}
Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_1)/Re)==0,NA,1/(colMeans(prop_rejct_1)/Re))
Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_5)/Re)==0,NA,1/(colMeans(prop_rejct_5)/Re))
#Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(apply(prop_rejct_1,2,median)/Re))
#Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(apply(prop_rejct_5,2,median)/Re))
Res_sd_A_1[n1_count,n_count,] <- apply(prop_rejct_1,2,sd)/Re
Res_sd_A_5[n1_count,n_count,] <- apply(prop_rejct_5,2,sd)/Re
Res_A_d1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(colMeans(prop_rejct_d1)/Re))
Res_A_d5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(colMeans(prop_rejct_d5)/Re))
Res_sd_A_d1[n1_count,n_count,] <- apply(prop_rejct_d1,2,sd)/Re
Res_sd_A_d5[n1_count,n_count,] <- apply(prop_rejct_d5,2,sd)/Re
}
}
tempo1<- Sys.time()-at1
m_res_1<- matrix(0,ncol=7,nrow=length(n1v)*length(nv)*length(ar_coefs))
m_res_5<-m_res_1
icount=0
ic=0
for(i in n1v){
ic=ic+1
jc=0
for(j in nv){
jc=jc+1
kc=0
for(k in ar_coefs){
kc=kc+1
print(kc)
icount=icount+1
m_res_1[icount,] <- c(i,j,k,Res_A_1[ic,jc,kc],Res_sd_A_1[ic,jc,kc],Res_A_d1[ic,jc,kc],Res_sd_A_d1[ic,jc,kc])
m_res_5[icount,] <- c(i,j,k,Res_A_5[ic,jc,kc],Res_sd_A_5[ic,jc,kc],Res_A_d5[ic,jc,kc],Res_sd_A_d5[ic,jc,kc])
}
}
}
#colnames(m_res_1)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
#round(m_res_1,3)
colnames(m_res_5)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
round(m_res_5,3)
colnames(m_res_1)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
round(m_res_1,3)
xx
xx[r,]
nv=c(500,1000,2000)#tamanho da serie
n1v=c(5,10,30,50)# quantidade de series no H0
#LagMax=199 #quantidade de acfs usada
Re=300 #series a serem monitoreadas n_new
REP=100 #replicações do H0 também (total de reps será Re*REP)
ar_h0=0.3
ar_coefs=c(-0.4,-0.3,-0.1,0.2,0.3,0.4,0.5,0.7)
#ar_coefs=c(0.3)
Res_A_1 <- array(dim=c(length(n1v),length(nv),length(ar_coefs)))
Res_A_5 <- Res_A_1;
Res_sd_A_1 <- Res_A_1; Res_sd_A_5 <- Res_A_1;
Res_A_d1 <- Res_A_1; Res_A_d5 <- Res_A_1;
Res_sd_A_d1 <- Res_A_1; Res_sd_A_d5 <- Res_A_1;
at1<-Sys.time()
n1_count=0
for(n1 in n1v){
n1_count<-n1_count+1
n_count<-0
print(paste("n1_",n1))
for(n in nv){
LagMax=floor(2*n/3)
print(paste("n_",n))
n_count<-n_count+1
prop_rejct_1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_5=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d1=matrix(0,nrow=REP,ncol=length(ar_coefs))
prop_rejct_d5=matrix(0,nrow=REP,ncol=length(ar_coefs))
for(rep in 1:REP){
print(paste("REP_",rep))
for(s in 1:length(ar_coefs)){
x=matrix(0,ncol=n,nrow=n1)
y=x
xx=matrix(0,ncol=n,nrow=Re);yy=xx
acf_0=matrix(0,nrow=n1,ncol=LagMax)
acf_1=matrix(0,nrow=Re,ncol=LagMax)
for(r in 1:n1){
x[r,]<-arima.sim(n=n, model = list(ar = ar_h0))
y[r,]<-x[r,]-ma(x[r,])
x[r,]<-x[r,]/sd(x[r,])
acf_0[r,]=acf((y[r,1:(n-30)]),lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h0<-sweep(x, 2, colMeans(x))#retira a serie media dos dados
for(r in 1:Re){
xx[r,]<-arima.sim(n=n, model = list(ar = ar_coefs[s]))
yy[r,]<-xx[r,]-ma(xx[r,])
xx[r,]<-xx[r,]/sd(xx[r,])
acf_1[r,]=acf(yy[r,1:(n-30)],lag.max=LagMax,plot=FALSE)$acf[-1]
}
x_h1<-sweep(xx, 2, colMeans(x))#retira a serie media(h0) dos dados (h1)
d_a<-as.matrix(((dist(rbind(acf_0,acf_1)))^2))
d_d<-as.matrix(dist(rbind(x_h0,x_h1))^2)
###########################
U0=c()
U0d=c()
for(i in 1:n1){
group_id=rep(0,n1)
group_id[i]=1
U0[i]=bn(group_id, md=d_a[1:n1,1:n1])
U0d[i]=bn(group_id, md=d_d[1:n1,1:n1])
}
sdU0=sqrt(var_bn(c(1,(n1-1)),md=d_a[1:n1,1:n1]))
sdU0d=sqrt(var_bn(c(1,(n1-1)),md=d_d[1:n1,1:n1]))
U1=c()
U1d=c()
for(i in 1:Re){
group_id=c(rep(0,(n1-1)),1)
aux1=sample(n1,(n1-1))
U1[i]=bn(group_id, md=d_a[c(aux1,(i+n1)),c(aux1,(i+n1))])
U1d[i]=bn(group_id, md=d_d[c(1:(n1-1),(i+n1)),c(1:(n1-1),(i+n1))])
}
####
###
prop_rejct_1[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.99))
prop_rejct_5[rep,s]=sum((U1/((n1/(n1-1))*sdU0))>qnorm(0.95))
prop_rejct_d1[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.99))
prop_rejct_d5[rep,s]=sum((U1d/sd((n1/(n1-1))*U0d))>qnorm(0.95))
}
}
Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_1)/Re)==0,NA,1/(colMeans(prop_rejct_1)/Re))
Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_5)/Re)==0,NA,1/(colMeans(prop_rejct_5)/Re))
#Res_A_1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(apply(prop_rejct_1,2,median)/Re))
#Res_A_5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(apply(prop_rejct_5,2,median)/Re))
Res_sd_A_1[n1_count,n_count,] <- apply(prop_rejct_1,2,sd)/Re
Res_sd_A_5[n1_count,n_count,] <- apply(prop_rejct_5,2,sd)/Re
Res_A_d1[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d1)/Re)==0,NA,1/(colMeans(prop_rejct_d1)/Re))
Res_A_d5[n1_count,n_count,] <- ifelse((colMeans(prop_rejct_d5)/Re)==0,NA,1/(colMeans(prop_rejct_d5)/Re))
Res_sd_A_d1[n1_count,n_count,] <- apply(prop_rejct_d1,2,sd)/Re
Res_sd_A_d5[n1_count,n_count,] <- apply(prop_rejct_d5,2,sd)/Re
}
}
tempo1<- Sys.time()-at1
#
res=list(Res_A_1=Res_A_1,Res_A_5=Res_A_5,Res_sd_A_1=Res_sd_A_1,Res_sd_A_5=Res_sd_A_5,
Res_A_d1=Res_A_d1,Res_A_d5=Res_A_d5,Res_sd_A_d1=Res_sd_A_d1,Res_sd_A_d5=Res_sd_A_d5)
save(res,file=paste("res_AR_x_AR_HOT_",ar_h0,"_Re_",Re,"_Rep_",REP,"_LagMax_",LagMax,sep=""))
m_res_1<- matrix(0,ncol=7,nrow=length(n1v)*length(nv)*length(ar_coefs))
m_res_5<-m_res_1
icount=0
ic=0
for(i in n1v){
ic=ic+1
jc=0
for(j in nv){
jc=jc+1
kc=0
for(k in ar_coefs){
kc=kc+1
print(kc)
icount=icount+1
m_res_1[icount,] <- c(i,j,k,Res_A_1[ic,jc,kc],Res_sd_A_1[ic,jc,kc],Res_A_d1[ic,jc,kc],Res_sd_A_d1[ic,jc,kc])
m_res_5[icount,] <- c(i,j,k,Res_A_5[ic,jc,kc],Res_sd_A_5[ic,jc,kc],Res_A_d5[ic,jc,kc],Res_sd_A_d5[ic,jc,kc])
}
}
}
#colnames(m_res_1)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
#round(m_res_1,3)
colnames(m_res_5)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
round(m_res_5,3)
colnames(m_res_1)<-c("n1","n","ar_coefs","ACF_mu","ACF_sd","Drift_mu","Drift_sd")
round(m_res_1,3)
328/2
41270.97+87065.37
41270.97-1198.08
40072.89+87065.37
362.947*1000/60
362947*1000/60
362947*1000/60 /127842
# Pacotes
library(pdfCluster)
install.packages("pdfCluster")
install.packages("devtools")
# Com grupo de tamanho 1
library(devtols)
# Com grupo de tamanho 1
library(devtools)
# Com grupo de tamanho 1
#library(devtools)
install_github("pkimes/sigclust2")
install.packages("Rcpp")
library(Rcpp)
# Com grupo de tamanho 1
#library(devtools)
install_github("pkimes/sigclust2")
BiocManager::install("pkimes/sigclust2")
install.packages("BiocManager")
BiocManager::install("pkimes/sigclust2")
install.packages("RTools")
install.Rtools()
suppressPackageStartupMessages(library("sigclust2"))
devtools::install_github("nolanlab/Rclusterpp")
# Com grupo de tamanho 1
#library(devtools)
install_github("pkimes/sigclust2")
BiocManager::install("GO.db")
install.packages("S4Vectors")
BiocManager::install("Biobase")
BiocManager::install("pkimes/sigclust2")
library(sigclust2)
qnorm(0.5517)
pnorm(0.5517)
pnorm(0.5517)
0.5-0.0559
6/4
0.5-0.4332
qnorm(0.75)
0.6744898*4+8
(27.8-31.2)   /   (3/sqrt(14))
setwd("C:/Users/Marcio/Dropbox/Renan Mestrado/Code/Simulation/Tabs 1-2")
